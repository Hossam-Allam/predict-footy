Index: Dockerfile
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># syntax=docker/dockerfile:1\n# check=error=true\n\n# This Dockerfile is designed for production, not development. Use with Kamal or build'n'run by hand:\n# docker build -t predict_footy .\n# docker run -d -p 80:80 -e RAILS_MASTER_KEY=<value from config/master.key> --name predict_footy predict_footy\n\n# For a containerized dev environment, see Dev Containers: https://guides.rubyonrails.org/getting_started_with_devcontainer.html\n\n# Make sure RUBY_VERSION matches the Ruby version in .ruby-version\nARG RUBY_VERSION=3.3.4\nFROM docker.io/library/ruby:$RUBY_VERSION AS base\n\n# Rails app lives here\nWORKDIR /rails\n\n# Install base packages\nRUN apt-get update -qq && \\\n    apt-get install --no-install-recommends -y curl libjemalloc2 libvips postgresql-client && \\\n    rm -rf /var/lib/apt/lists /var/cache/apt/archives\n\n# Set production environment\nENV RAILS_ENV=\"production\" \\\n    BUNDLE_DEPLOYMENT=\"1\" \\\n    BUNDLE_PATH=\"/usr/local/bundle\" \\\n    BUNDLE_WITHOUT=\"development\"\n\n# Throw-away build stage to reduce size of final image\nFROM base AS build\n# Install packages needed to build gems\nRUN apt-get update -qq && \\\n    apt-get install --no-install-recommends -y build-essential git libpq-dev pkg-config && \\\n    rm -rf /var/lib/apt/lists /var/cache/apt/archives\n# Install application gems\nCOPY Gemfile Gemfile.lock ./\nRUN bundle install && \\\n    rm -rf ~/.bundle/ \"${BUNDLE_PATH}\"/ruby/*/cache \"${BUNDLE_PATH}\"/ruby/*/bundler/gems/*/.git && \\\n    bundle exec bootsnap precompile --gemfile\n\n# Copy application code\nCOPY . .\n\n# Precompile bootsnap code for faster boot times\nRUN bundle exec bootsnap precompile app/ lib/\n\n# Precompiling assets for production without requiring secret RAILS_MASTER_KEY\nRUN RAILS_MASTER_KEY=4afb29d10dd0da976fb797cbdcd30707 ./bin/rails assets:precompile\n\nFROM base\n\nCOPY --from=build \"${BUNDLE_PATH}\" \"${BUNDLE_PATH}\"\nCOPY --from=build /rails /rails\n# Run and own only the runtime files as a non-root user for security\nRUN groupadd --system --gid 1000 rails && \\\n    useradd rails --uid 1000 --gid 1000 --create-home --shell /bin/bash && \\\n    chown -R rails:rails db log storage tmp\nUSER 1000:1000\n\nUSER root\n\nRUN mkdir -p /var/lib/apt/lists/partial && \\\n    apt-get update -qq && \\\n    apt-get install --no-install-recommends -y cron && \\\n    rm -rf /var/lib/apt/lists /var/cache/apt/archives\n\n\n\nCOPY config/schedule.rb /rails/config/schedule.rb\n\nUSER 1000:1000\n# Entrypoint prepares the database.\nENTRYPOINT [\"/rails/bin/docker-entrypoint\"]\n\nEXPOSE 3000\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dockerfile b/Dockerfile
--- a/Dockerfile	(revision c5a924843b7f9204b8c9e86ac0b93d846dce3916)
+++ b/Dockerfile	(date 1741523718947)
@@ -72,4 +72,4 @@
 ENTRYPOINT ["/rails/bin/docker-entrypoint"]
 
 EXPOSE 3000
-
+CMD ["sh", "-c", "bundle exec rails server -b 0.0.0.0 & bundle exec sidekiq"]
